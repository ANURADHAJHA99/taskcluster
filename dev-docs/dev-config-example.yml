rootUrl: ...
dockerImage: ...
ingressStaticIpName: ...
ingressCertName: ...
pulstHostname: ...
pulseVhost: ...
azureAccountId: ...
forceSSL: false
trustProxy: true
nodeEnv: production
meta: {}
auth:
  client_table_name: (optional) ...
  roles_container_name: (optional) ...
  static_clients:
    - clientId: static/taskcluster/built-in-workers
      description: 'Autogenerated, do not edit. Client for built-in-workers'
      scopes:
        - 'queue:claim-work:built-in/*'
        - 'assume:worker-id:built-in/*'
        - 'queue:worker-id:built-in/*'
        - 'queue:resolve-task'
      accessToken: ...
    - clientId: static/taskcluster/github
      description: 'Autogenerated, do not edit. Client for github'
      scopes:
        - 'assume:repo:github.com/*'
        - 'assume:scheduler-id:taskcluster-github/*'
        - 'auth:azure-table-access:${azureAccountId}/TaskclusterGithubBuilds'
        - 'auth:azure-table-access:${azureAccountId}/TaskclusterIntegrationOwners'
        - 'auth:azure-table:read-write:${azureAccountId}/TaskclusterGithubBuilds'
        - 'auth:azure-table:read-write:${azureAccountId}/TaskclusterIntegrationOwners'
        - 'auth:azure-table:read-write:${azureAccountId}/TaskclusterChecksToTasks'
        - 'auth:azure-table:read-write:${azureAccountId}/TaskclusterCheckRuns'
      accessToken: ...
    - clientId: static/taskcluster/hooks
      description: 'Autogenerated, do not edit. Client for hooks'
      scopes:
        - 'auth:azure-table:read-write:${azureAccountId}/Hooks'
        - 'auth:azure-table:read-write:${azureAccountId}/Queue'
        - 'auth:azure-table:read-write:${azureAccountId}/LastFire'
        - 'assume:hook-id:*'
        - 'notify:email:*'
        - 'queue:create-task:*'
      accessToken: ...
    - clientId: static/taskcluster/index
      description: 'Autogenerated, do not edit. Client for index'
      scopes:
        - 'auth:azure-table-access:${azureAccountId}/IndexedTasks'
        - 'auth:azure-table-access:${azureAccountId}/Namespaces'
        - 'auth:azure-table:read-write:${azureAccountId}/IndexedTasks'
        - 'auth:azure-table:read-write:${azureAccountId}/Namespaces'
        - 'queue:get-artifact:*'
      accessToken: ...
    - clientId: static/taskcluster/notify
      description: 'Autogenerated, do not edit. Client for notify'
      scopes:
        - 'auth:azure-table:read-write:${azureAccountId}/DenylistedNotification'
        - 'auth:azure-table:read-write:${azureAccountId}/Denylist'
      accessToken: ...
    - clientId: static/taskcluster/purge-cache
      description: 'Autogenerated, do not edit. Client for purge-cache'
      scopes:
        - 'auth:azure-table:read-write:${azureAccountId}/CachePurges'
      accessToken: ...
    - clientId: static/taskcluster/queue
      description: 'Autogenerated, do not edit. Client for queue'
      scopes:
        - '*'
      accessToken: ...
    - clientId: static/taskcluster/secrets
      description: 'Autogenerated, do not edit. Client for secrets'
      scopes:
        - 'auth:azure-table-access:${azureAccountId}/Secrets'
        - 'auth:azure-table:read-write:${azureAccountId}/Secrets'
      accessToken: ...
    - clientId: static/taskcluster/web-server
      description: 'Autogenerated, do not edit. Client for web-server'
      scopes:
        - 'assume:mozilla-group:*'
        - 'assume:mozilla-user:*'
        - 'assume:mozillians-group:*'
        - 'assume:mozillians-user:*'
        - 'auth:create-client:mozilla-auth0/*'
        - 'auth:delete-client:mozilla-auth0/*'
        - 'auth:disable-client:mozilla-auth0/*'
        - 'auth:enable-client:mozilla-auth0/*'
        - 'auth:reset-access-token:mozilla-auth0/*'
        - 'auth:update-client:mozilla-auth0/*'
        - 'auth:create-client:github/*'
        - 'auth:delete-client:github/*'
        - 'auth:disable-client:github/*'
        - 'auth:enable-client:github/*'
        - 'auth:reset-access-token:github/*'
        - 'auth:update-client:github/*'
        - 'assume:login-identity:*'
      accessToken: ...
    - clientId: static/taskcluster/worker-manager
      description: 'Autogenerated, do not edit. Client for worker-manager'
      scopes:
        - 'auth:create-client:worker/*'
        - 'assume:worker-type:*'
        - 'assume:worker-pool:*'
        - 'assume:worker-id:*'
        - 'auth:azure-table:read-write:${azureAccountId}/WM*'
        - 'notify:email:*'
        - 'secrets:get:worker-type:*'
        - 'secrets:get:worker-pool:*'
        - 'queue:claim-work:*'
        - 'queue:worker-id:*'
      accessToken: ...
    - clientId: static/taskcluster/root
      description: 'Autogenerated, do not edit. Client for administering the deployment.'
      scopes:
        - '*'
      accessToken: ...
  azure_accounts: '{}'
  sentry_organization: (optional) ...
  sentry_host: (optional) ...
  sentry_auth_token: (optional) ...
  sentry_team: (optional) ...
  sentry_key_prefix: (optional) ...
  statsum_api_secret: (optional) ...
  statsum_base_url: (optional) ...
  websocktunnel_secret: (optional) ...
  docs_bucket: (optional) ...
  schemas_bucket: (optional) ...
  refs_bucket: (optional) ...
  audit_log: (optional) ...
  azure_account_key: ...
  azure_signing_key: ...
  azure_crypto_key: ...
  pulse_username: ...
  pulse_password: ...
  aws_access_key_id: (optional) ...
  aws_secret_access_key: (optional) ...
  aws_region: (optional) ...
  gcp_credentials_allowed_projects: '(optional) {}'
  test_bucket: (optional) ...
built_in_workers:
  taskcluster_access_token: ...
github:
  bot_username: ...
  taskcluster_access_token: ...
  github_private_pem: ...
  github_app_id: ...
  webhook_secret: '[]'
  provisioner_id: (optional) ...
  worker_type: (optional) ...
  pulse_username: ...
  pulse_password: ...
  pulse_namespace: ...
  aws_access_key: (optional) ...
  aws_secret_key: (optional) ...
hooks:
  hook_table_name: ...
  lastfire_table_name: ...
  queue_table_name: ...
  influx_connection: (optional) ...
  azure_signing_key: ...
  azure_crypto_key: ...
  taskcluster_access_token: ...
  aws_access_key_id: (optional) ...
  aws_secret_access_key: (optional) ...
  pulse_username: ...
  pulse_password: ...
index:
  taskcluster_access_token: ...
  pulse_username: ...
  pulse_password: ...
  pulse_namespace: ...
  aws_access_key_id: (optional) ...
  aws_secret_access_key: (optional) ...
notify:
  email_source_address: ...
  email_blacklist: '(optional) {}'
  denylisted_notification_table_name: ...
  taskcluster_access_token: ...
  aws_access_key_id: ...
  aws_secret_access_key: ...
  aws_region: (optional) ...
  pulse_namespace: ...
  pulse_username: ...
  pulse_password: ...
  irc_server: (optional) ...
  irc_nick: (optional) ...
  irc_user_name: (optional) ...
  irc_real_name: (optional) ...
  irc_password: (optional) ...
  irc_port: (optional) ...
  irc_debug: (optional) ...
  irc_pulse_queue_name: (optional) ...
purge_cache:
  taskcluster_access_token: ...
  aws_access_key_id: (optional) ...
  aws_secret_access_key: (optional) ...
queue:
  public_blob_artifact_bucket: ...
  private_blob_artifact_bucket: ...
  blob_artifact_region: ...
  public_artifact_bucket: ...
  private_artifact_bucket: ...
  azure_report_chance: (optional) ...
  azure_report_threshold: (optional) ...
  public_artifact_ec2_proxies: '(optional) {}'
  public_artifact_bucket_cdn: (optional) ...
  use_cloud_mirror: (optional) true/false
  taskcluster_access_token: ...
  azure_account_key: ...
  azure_table_account_name: ...
  pulse_namespace: ...
  pulse_username: ...
  pulse_password: ...
  aws_access_key_id: ...
  aws_secret_access_key: ...
  artifact_region: ...
secrets:
  taskcluster_access_token: ...
  azure_table_name: ...
  azure_crypto_key: ...
  azure_signing_key: ...
  aws_access_key_id: (optional) ...
  aws_secret_access_key: (optional) ...
web_server:
  public_url: ...
  additional_allowed_cors_origin: ...
  taskcluster_access_token: ...
  pulse_namespace: ...
  pulse_username: ...
  pulse_password: ...
  ui_login_strategies: '{}'
  session_secret: ...
worker_manager:
  taskcluster_access_token: ...
  pulse_username: ...
  pulse_password: ...
  pulse_namespace: ...
  providers: '{}'
ui:
  application_name: ...
  graphql_subscription_endpoint: ...
  graphql_endpoint: ...
  ui_login_strategy_names: ...
references: {}
